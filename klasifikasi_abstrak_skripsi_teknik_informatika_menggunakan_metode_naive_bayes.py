# -*- coding: utf-8 -*-
"""Klasifikasi Abstrak Skripsi Teknik Informatika Menggunakan Metode Naive Bayes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y9GwyMSVdYFuV_dUtUbr1LqoCFkp4Iwy

# Klasifikasi Data Teks menggunakan Metode Naive Bayes

- Import Library
"""

import pandas as pd
import numpy as np
import re

dfuji = pd.read_csv("/content/dataAbstrak.csv")

dfuji.info

import seaborn as sns
sns.countplot(x="label", data=dfuji,)

"""- Instal sastrawi"""

!pip install sastrawi
from Sastrawi.Stemmer.StemmerFactory import StemmerFactory

from Sastrawi.Stemmer.StemmerFactory import StemmerFactory
factory = StemmerFactory()
stemmer = factory.create_stemmer()

#simpan kata-kata stopword

f = open("/content/stopword_list_tala.txt", "r")
isi = f.read()

tempStoplist = []
for tempstp in isi.split():
  tempStoplist.append(tempstp.lower())

cleantext = "(@[A-Za-z0-9_-]+)|([^A-Za-z \t\n])|(\w+:\/\/\S+)|(x[A-Za-z0-9]+)|(X[A-Za-z0-9]+)" #regex untuk remove punctuation

def preprocessing(teks):
  teks = teks.rstrip("\n")
  teks = re.sub(r'^https?:\/\/.*[\r\n]*', '', teks, flags=re.MULTILINE)
  teks = re.sub(cleantext,' ',str(teks).lower()).strip() #casefolding dan remove punctuation
 # teks = re.sub(r'[0-9]+', '', teks, flags=re.MULTILINE)
  tokens = []
  for token in teks.split():
    #if token in templist:
    if token not in tempStoplist: #jika token tidak di stopword maka simpan
      token = stemmer.stem(token) #lakukan stemming
      if len(token) >= 2:
     #if token != 'b':
       if token != 'rt':
        tokens.append(token) 
  return " ".join(tokens)

preprocessing("""Pada era digital seperti saat ini, kebutuhan akan pulsa dan paket data semakin meningkat. Oleh karena itu, dibutuhkan sebuah aplikasi yang dapat memudahkan masyarakat dalam membeli pulsa dan paket data secara online. Aplikasi ini akan dikembangkan dengan menggunakan bahasa pemrograman Java dan akan tersedia untuk digunakan pada perangkat berbasis Android.

Aplikasi ini akan memiliki fitur utama seperti penambahan saldo, pembelian pulsa dan paket data, serta pengecekan saldo dan riwayat transaksi. Selain itu, aplikasi ini juga akan memiliki fitur tambahan seperti notifikasi pengingat untuk menambah saldo, serta diskon dan promo menarik untuk pembelian pulsa dan paket data.

Pengujian aplikasi ini akan dilakukan dengan melibatkan beberapa pengguna untuk mengetahui tingkat kepuasan dan keberhasilan dari aplikasi ini. Setelah dilakukan pengujian dan perbaikan, aplikasi ini akan diluncurkan ke pasar dan diharapkan dapat memberikan manfaat bagi masyarakat dalam memenuhi kebutuhan akan pulsa dan paket data secara cepat dan mudah.""")

dfuji['Teksbersih'] = dfuji.ABSTRAK.apply(lambda x:preprocessing(x))
dfuji.head()

dfuji.to_csv('databersih.csv')

dfuji = pd.read_csv("/content/databersih.csv")
dfuji

label_train = dfuji['label'].to_numpy()
fitur_train = dfuji[['NAMA','Teksbersih']]

print(fitur_train)

y = dfuji['label']
x = dfuji['Teksbersih']

# y = dfuji["label"]
# y.head(11)

y = dfuji['label']
x = dfuji['Teksbersih']

from sklearn.feature_extraction.text import TfidfVectorizer
from  sklearn.feature_extraction.text  import  CountVectorizer 

#membangun vector space model/pembobotan dengan tfidf
vectorizer = TfidfVectorizer()
features = vectorizer.fit_transform(x).toarray()

import pickle  ##Kodingan untuk deployment
nama_file='vectorizer.model'
pickle.dump(vectorizer,open(nama_file,'wb'))

from sklearn.model_selection import  train_test_split
x_train, x_test, y_train, y_test = train_test_split(features,y,test_size=0.2,random_state=123)

# print (y_test)

"""Naive Bayes"""

import time
from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import train_test_split

text_classifier_nb = GaussianNB()
t0_nb = time.time()
text_classifier_nb.fit(x_train, y_train)
t1_nb = time.time()

nama_file='abstract_classifier_nb.model'
pickle.dump(text_classifier_nb,open(nama_file,'wb'))

predictions_nb = text_classifier_nb.predict(x_test)
t2_nb = time.time()
time_linier_train_nb = t1_nb-t0_nb
time_linier_predict_nb = t2_nb-t1_nb

print("NB Training time: %fs; Prediction time: %fs" % (time_linier_train_nb, time_linier_predict_nb))

y_pred = text_classifier_nb.predict(x_test)
y_pred

text_classifier_nb.predict_proba(x_test)

from sklearn.metrics import confusion_matrix
confusion_matrix(y_test, y_pred)

from sklearn.metrics import classification_report
print(classification_report(y_test, y_pred))

"""WordCloud"""

from wordcloud import WordCloud 
import matplotlib.pyplot as plt

jaringan_komputer = ' '.join(dfuji[dfuji.label == "JK"].Teksbersih.values)
Rekayasa_perangkat_lunak = ' '.join(dfuji[dfuji.label == "RPL"].Teksbersih.values)
artificial_intelligence = ' '.join(dfuji[dfuji.label == "AI"].Teksbersih.values)

plt.figure(figsize=(20, 8))

cloud1 = WordCloud(max_font_size=50, max_words=100, background_color='white').generate(jaringan_komputer)
plt.subplot(131)
plt.imshow(cloud1, interpolation="bilinear")
plt.axis("off")
plt.title('JK', size=20)

cloud2 = WordCloud(max_font_size=50, max_words=100, background_color='white').generate(Rekayasa_perangkat_lunak)
plt.subplot(132)
plt.imshow(cloud2, interpolation="bilinear")
plt.axis("off")
plt.title('RPL', size=20)

cloud3 = WordCloud(max_font_size=50, max_words=100, background_color='white').generate(artificial_intelligence)
plt.subplot(133)
plt.imshow(cloud3, interpolation="bilinear")
plt.axis("off")
plt.title('AI', size=20)

plt.show()

"""DataPred"""

dfpred =  pd.read_csv("/content/dataUji.csv")
dfpred.head()

dfpred.info()

dfpred['teksbersih'] = dfpred.ABSTRAK.apply(lambda x:preprocessing(x))
dfpred.head()

xpred = dfpred['teksbersih']
pred = vectorizer.transform(xpred).toarray()
dfpred['labelhasil']=text_classifier_nb.predict(pred)

import seaborn as sns
sns.countplot(x="labelhasil", data=dfpred)

import matplotlib.pyplot as plt
fig, axs = plt.subplots(1, figsize=(3,5), sharey=True)
fig.suptitle('Prediction of Klasifikasi')
sns.countplot(x="labelhasil", data=dfpred)
axs.set_title("TFIDF - Naive Bayes")

dfpred.to_csv('prediksi.csv',encoding='utf-8')

dfbaru = pd.read_csv("prediksi.csv",index_col=[0])
dfbaru.head()

""""Pada era digital seperti saat ini, kebutuhan akan pulsa dan paket data semakin meningkat. Oleh karena itu, dibutuhkan sebuah aplikasi yang dapat memudahkan masyarakat dalam membeli pulsa dan paket data secara online. Aplikasi ini akan dikembangkan dengan menggunakan bahasa pemrograman Java dan akan tersedia untuk digunakan pada perangkat berbasis Android.

Aplikasi ini akan memiliki fitur utama seperti penambahan saldo, pembelian pulsa dan paket data, serta pengecekan saldo dan riwayat transaksi. Selain itu, aplikasi ini juga akan memiliki fitur tambahan seperti notifikasi pengingat untuk menambah saldo, serta diskon dan promo menarik untuk pembelian pulsa dan paket data.

Pengujian aplikasi ini akan dilakukan dengan melibatkan beberapa pengguna untuk mengetahui tingkat kepuasan dan keberhasilan dari aplikasi ini. Setelah dilakukan pengujian dan perbaikan, aplikasi ini akan diluncurkan ke pasar dan diharapkan dapat memberikan manfaat bagi masyarakat dalam memenuhi kebutuhan akan pulsa dan paket data secara cepat dan mudah.
"
"""

text = """Pada era digital seperti saat ini, kebutuhan akan pulsa dan paket data semakin meningkat. Oleh karena itu, dibutuhkan sebuah aplikasi yang dapat memudahkan masyarakat dalam membeli pulsa dan paket data secara online. Aplikasi ini akan dikembangkan dengan menggunakan bahasa pemrograman Java dan akan tersedia untuk digunakan pada perangkat berbasis Android.

Aplikasi ini akan memiliki fitur utama seperti penambahan saldo, pembelian pulsa dan paket data, serta pengecekan saldo dan riwayat transaksi. Selain itu, aplikasi ini juga akan memiliki fitur tambahan seperti notifikasi pengingat untuk menambah saldo, serta diskon dan promo menarik untuk pembelian pulsa dan paket data.

Pengujian aplikasi ini akan dilakukan dengan melibatkan beberapa pengguna untuk mengetahui tingkat kepuasan dan keberhasilan dari aplikasi ini. Setelah dilakukan pengujian dan perbaikan, aplikasi ini akan diluncurkan ke pasar dan diharapkan dapat memberikan manfaat bagi masyarakat dalam memenuhi kebutuhan akan pulsa dan paket data secara cepat dan mudah"""

tf_idf_vectorizer = pickle.load(open("/content/vectorizer.model", 'rb'))

text = preprocessing(text)
text

vectorized_text = tf_idf_vectorizer.transform([text]).toarray()
vectorized_text

vectorized_text.shape

model = pickle.load(open("/content/abstract_classifier_nb.model", 'rb'))

result = model.predict(vectorized_text)

result